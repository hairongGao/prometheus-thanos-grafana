apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: thanos-compact
  name: thanos-compact
  namespace: istio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos-compact
  serviceName: thanos-compact
  template:
    metadata:
      labels:
        app.kubernetes.io/name: thanos-compact
    spec:
      containers:
        - name: thanos-compact
          args:
            - "compact"
            - "--wait"
            - "--log.level=info"
            - "--objstore.config-file=/etc/thanos/thanos-storage-config.yaml"
            - "--data-dir=/var/thanos/compact"
            - "--debug.accept-malformed-index"
            - "--retention.resolution-raw=90d"
            - "--retention.resolution-5m=180d"
            - "--retention.resolution-1h=360d"
            - "--delete-delay=48h"
            - "--deduplication.replica-label=prometheus_ha"
  #          - --deduplication.replica-label=rule_replica
          image: quay.io/thanos/thanos:v0.16.0
          ports:
            - containerPort: 10902
              name: http
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 10902
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 30
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 10902
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 30
            failureThreshold: 3
            successThreshold: 1
          resources:
            limits:
              cpu: 0.42
              memory: 420Mi
            requests:
              cpu: 0.123
              memory: 123Mi
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/thanos/compact
              name: data
              readOnly: false
            - name: thanos-objectstorage
              mountPath: /etc/thanos/
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
        - name: thanos-objectstorage
          configMap:
            name: thanos-storage-config
---
apiVersion: storage.k8s.io/v1beta1
kind: StorageClass
metadata:
  name: fast
  namespace: istio-system
provisioner: kubernetes.io/aws-ebs
allowVolumeExpansion: true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/name: thanos-compact
  name: data
  namespace: istio-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast
